---
- name: 'Ensure Gitea Runner storage directory'
  ansible.builtin.file:
    path: "{{ gitea_runner_dir }}/data"
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0750'

- name: 'Ensure Gitea Runner config file'
  ansible.builtin.template:
    src: 'config.yaml.j2'
    dest: "{{ gitea_runner_dir }}/config.yaml"
    owner: 'root'
    group: 'root'
    mode: '0640'
  notify: 'Restart gitea-runner'

- name: 'Ensure Podman container'
  containers.podman.podman_container:
    name: 'gitea_runner'
    image: "gitea/act_runner:{{ gitea_runner_version }}"
    state: 'present'
    auto_remove: true
    privileged: "{{ gitea_runner_privileged }}"
    volumes:
      - "{{ gitea_runner_dir }}/data:/data"
      - "{{ gitea_runner_dir }}/config.yaml:/config.yaml"
      - '/run/podman/podman.sock:/var/run/docker.sock:z'
      - "{{ gitea_runner_ca_file }}:/etc/ssl/certs/ca-certificates.crt:ro,z"
    generate_systemd:
      path: '/etc/systemd/system'
      restart_policy: 'always'
      time: 120
      names: true
      new: true
      container_prefix: ''
      separator: ''
    env:
      GITEA_INSTANCE_URL: "{{ gitea_runner_instance_url }}"
      GITEA_RUNNER_REGISTRATION_TOKEN: "{{ gitea_runner_registration_token }}"
      GITEA_RUNNER_NAME: "{{ gitea_runner_name }}"
      CONFIG_FILE: '/config.yaml'
      http_proxy: "{{ gitea_runner_proxy_url }}"
      https_proxy: "{{ gitea_runner_proxy_url }}"
      no_proxy: "{{ gitea_runner_no_proxy }}"
  notify: 'Restart gitea-runner'

- name: 'Ensure service'
  ansible.builtin.systemd:
    name: 'gitea-runner.service'
    state: 'started'
    daemon_reload: true

- name: 'Ensure cleanup cronjob'
  ansible.builtin.cron:
    name: 'gitea_runner - clean up old images'
    user: 'root'
    job: "podman system prune -af --filter \"until={{ gitea_runner_prune_images_older_then }}h\""
    special_time: 'daily'
